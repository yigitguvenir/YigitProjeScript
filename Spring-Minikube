minikube install

sudo apt update
sudo apt install docker.io
sudo systemctl start docker
sudo systemctl enable docker
sudo apt update
sudo apt install kubectl
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube
minikube start
--------------


Hello-WorldApplication.java (Springboot)

package com.example;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

@SpringBootApplication
public class HelloWorldApplication {

    public static void main(String[] args) {
        SpringApplication.run(HelloWorldApplication.class, args);
    }

    @RestController
    class HelloWorldController {

        @GetMapping("/")
        public String hello() {
            return "Merhaba DÃ¼nya!";
        }
    }
}
-------------------------------------------------

Resources-->Templates--->index.html

<!DOCTYPE html>
<html>
<head>
    <title>Hello World</title>
</head>
<body>
    <h1>Hello World</h1>
</body>
</html>

--------------------------------------------------
application.properties

server.port=8181


Dockerfile
FROM openjdk:11-jre-slim
WORKDIR /app
COPY demo-0.0.1-SNAPSHOT.jar app.jar
CMD ["java", "-jar", "app.jar"]


sudo docker build -t springboot-proje .



-----------------------------------------------------

Deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
        - name: springboot-container
          image: springboot-proje  
          ports:
            - containerPort: 8181

Service.yaml

apiVersion: v1
kind: Service
metadata:
  name: springboot-service
spec:
  selector:
    app: springboot-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8181
  type: NodePort


kubectl apply -f deployment.yaml
kubectl apply -f service.yaml


-------------------------------------------------

ingress.yaml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: springboot-ingress
spec:
  rules:
    - host: springboot.local 
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: springboot-service
                port:
                  number: 80

kubectl apply -f ingress.yaml








